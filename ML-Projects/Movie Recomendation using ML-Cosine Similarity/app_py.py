# -*- coding: utf-8 -*-
"""App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dJqpfd7l85QCEFM_d-XsoNFOvliZ9rM9
"""

!pip install streamlit

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import streamlit as st

# Load data
@st.cache_data
def load_data():
    data = pd.read_csv('/content/movies.csv')
    return data

data = load_data()

# Select features
selected_features = ['genres', 'keywords', 'tagline', 'cast', 'director']

# Replace null values
for feature in selected_features:
    data[feature] = data[feature].fillna('')

# Combine features
combined_features = data['genres'] + " " + data['keywords'] + " " + data['tagline'] + " " + data['cast'] + " " + data['director']

# Convert text to feature vectors
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)

# Get similarity scores
similarity = cosine_similarity(feature_vectors)

# Streamlit app
st.title('Movie Recommendation System')

movie_name = st.text_input('Enter your favorite movie name:')

if st.button('Recommend'):
    list_of_all_titles = data['title'].tolist()
    find_close_match = difflib.get_close_matches(movie_name, list_of_all_titles)

    if find_close_match:
        close_match = find_close_match[0]
        index_of_the_movie = data[data.title == close_match]['index'].values[0]
        similarity_score = list(enumerate(similarity[index_of_the_movie]))
        sorted_similar_movies = sorted(similarity_score, key = lambda x:x[1], reverse = True)

        st.write('Movies suggested for you:')
        i = 1
        for movie in sorted_similar_movies:
            index = movie[0]
            title_from_index = data[data.index==index]['title'].values[0]
            if (i<30):
                st.write(f"{i}. {title_from_index}")
                i += 1
    else:
        st.write('No close matches found. Please try another movie name.')

